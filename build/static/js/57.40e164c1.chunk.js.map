{"version":3,"sources":["components/base-card/BaseCard.js","views/alert/ExAlert.js"],"names":["BaseCard","title","children","sx","width","p","BCrumb","to","ExAlert","React","useState","open","setOpen","description","items","container","spacing","item","xs","lg","sm","display","alignItems","variant","severity","onClose","action","color","size","in","onClick","icon","disabled"],"mappings":"iGAAA,oDAuBeA,IAnBE,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACf,eAAC,IAAD,CACEC,GAAI,CACFC,MAAO,OACPC,EAAG,GAHP,UAME,cAAC,IAAD,CAAYJ,MAAOA,IAEnB,cAAC,IAAD,IACA,cAAC,IAAD,UAAcC,S,2KCNZI,EAAS,CACb,CACEC,GAAI,IACJN,MAAO,QAET,CACEA,MAAO,UA8FIO,UA1FC,WACd,MAAwBC,IAAMC,UAAS,GAAvC,mBAAOC,EAAP,KAAaC,EAAb,KAEA,OACE,eAAC,IAAD,CAAeX,MAAM,QAAQY,YAAY,qBAAzC,UAEE,cAAC,IAAD,CAAYZ,MAAM,QAAQa,MAAOR,IAEjC,eAAC,IAAD,CAAMS,WAAS,EAACC,QAAS,EAAzB,UAEE,cAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,QAAQ,OAAOC,WAAW,UAA3D,SACE,cAAC,IAAD,CAAUrB,MAAM,eAAhB,SACE,eAAC,IAAD,CAAOe,QAAS,EAAhB,UACE,cAAC,IAAD,CAAOO,QAAQ,SAASC,SAAS,QAAjC,yDAGA,cAAC,IAAD,CAAOD,QAAQ,SAASC,SAAS,UAAjC,0DAGA,cAAC,IAAD,CAAOD,QAAQ,SAASC,SAAS,OAAjC,wDAGA,cAAC,IAAD,CAAOD,QAAQ,SAASC,SAAS,UAAjC,iEAON,cAAC,IAAD,CAAMP,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,QAAQ,OAAOC,WAAW,UAA3D,SACE,cAAC,IAAD,CAAUrB,MAAM,eAAhB,SACE,eAAC,IAAD,CAAOe,QAAS,EAAhB,UACE,cAAC,IAAD,CAAOO,QAAQ,SAASC,SAAS,UAAUC,QAAS,aAApD,0DAGA,cAAC,IAAD,CACEF,QAAQ,SACRC,SAAS,OACTE,OACE,cAAC,IAAD,CAAQC,MAAM,UAAUC,KAAK,QAA7B,kBAJJ,iEAeN,cAAC,IAAD,CAAMX,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,QAAQ,OAAOC,WAAW,UAA3D,SACE,cAAC,IAAD,CAAUrB,MAAM,mBAAhB,SACE,eAAC,IAAD,CAAOe,QAAS,EAAhB,UACE,cAAC,IAAD,CAAUa,GAAIlB,EAAd,SACE,cAAC,IAAD,CACEY,QAAQ,SACRC,SAAS,OACTE,OACE,cAAC,IAAD,CACE,aAAW,QACXC,MAAM,UACNC,KAAK,QACLE,QAAS,WACPlB,GAAQ,IALZ,SAQE,cAAC,IAAD,CAAamB,KAAK,IAAI3B,MAAM,SAZlC,yBAmBF,cAAC,IAAD,CACE4B,SAAUrB,EACVY,QAAQ,WACRO,QAAS,WACPlB,GAAQ,IAJZ","file":"static/js/57.40e164c1.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Card, CardHeader, CardContent, Divider } from '@mui/material';\r\n\r\nconst BaseCard = ({ title, children }) => (\r\n  <Card\r\n    sx={{\r\n      width: '100%',\r\n      p: 0,\r\n    }}\r\n  >\r\n    <CardHeader title={title} />\r\n\r\n    <Divider />\r\n    <CardContent>{children}</CardContent>\r\n  </Card>\r\n);\r\n\r\nBaseCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default BaseCard;\r\n","import React from 'react';\r\nimport { Grid, Stack, Button, IconButton, Collapse } from '@mui/material';\r\nimport Alert from '@mui/lab/Alert';\r\nimport FeatherIcon from 'feather-icons-react';\r\nimport Breadcrumb from '../../layouts/full-layout/breadcrumb/Breadcrumb';\r\nimport BaseCard from '../../components/base-card/BaseCard';\r\nimport PageContainer from '../../components/container/PageContainer';\r\n\r\nconst BCrumb = [\r\n  {\r\n    to: '/',\r\n    title: 'Home',\r\n  },\r\n  {\r\n    title: 'Alert',\r\n  },\r\n];\r\n\r\nconst ExAlert = () => {\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  return (\r\n    <PageContainer title=\"Alert\" description=\"this is Alert page\">\r\n      {/* breadcrumb */}\r\n      <Breadcrumb title=\"Alert\" items={BCrumb} />\r\n      {/* end breadcrumb */}\r\n      <Grid container spacing={0}>\r\n        {/* ------------------------- row 1 ------------------------- */}\r\n        <Grid item xs={12} lg={6} sm={6} display=\"flex\" alignItems=\"stretch\">\r\n          <BaseCard title=\"Filled Alert\">\r\n            <Stack spacing={1}>\r\n              <Alert variant=\"filled\" severity=\"error\">\r\n                This is an error alert — check it out!\r\n              </Alert>\r\n              <Alert variant=\"filled\" severity=\"warning\">\r\n                This is a warning alert — check it out!\r\n              </Alert>\r\n              <Alert variant=\"filled\" severity=\"info\">\r\n                This is an info alert — check it out!\r\n              </Alert>\r\n              <Alert variant=\"filled\" severity=\"success\">\r\n                This is a success alert — check it out!\r\n              </Alert>\r\n            </Stack>\r\n          </BaseCard>\r\n        </Grid>\r\n        {/* ------------------------- row 1 ------------------------- */}\r\n        <Grid item xs={12} lg={6} sm={6} display=\"flex\" alignItems=\"stretch\">\r\n          <BaseCard title=\"Action Alert\">\r\n            <Stack spacing={1}>\r\n              <Alert variant=\"filled\" severity=\"warning\" onClose={() => {}}>\r\n                This is a success alert — check it out!\r\n              </Alert>\r\n              <Alert\r\n                variant=\"filled\"\r\n                severity=\"info\"\r\n                action={\r\n                  <Button color=\"inherit\" size=\"small\">\r\n                    UNDO\r\n                  </Button>\r\n                }\r\n              >\r\n                This is a success alert — check it out!\r\n              </Alert>\r\n            </Stack>\r\n          </BaseCard>\r\n        </Grid>\r\n        {/* ------------------------- row 1 ------------------------- */}\r\n        <Grid item xs={12} lg={6} sm={6} display=\"flex\" alignItems=\"stretch\">\r\n          <BaseCard title=\"Transition Alert\">\r\n            <Stack spacing={1}>\r\n              <Collapse in={open}>\r\n                <Alert\r\n                  variant=\"filled\"\r\n                  severity=\"info\"\r\n                  action={\r\n                    <IconButton\r\n                      aria-label=\"close\"\r\n                      color=\"inherit\"\r\n                      size=\"small\"\r\n                      onClick={() => {\r\n                        setOpen(false);\r\n                      }}\r\n                    >\r\n                      <FeatherIcon icon=\"x\" width=\"20\" />\r\n                    </IconButton>\r\n                  }\r\n                >\r\n                  Close me!\r\n                </Alert>\r\n              </Collapse>\r\n              <Button\r\n                disabled={open}\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  setOpen(true);\r\n                }}\r\n              >\r\n                Re-open\r\n              </Button>\r\n            </Stack>\r\n          </BaseCard>\r\n        </Grid>\r\n      </Grid>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default ExAlert;\r\n"],"sourceRoot":""}